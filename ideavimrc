
" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

let mapleader = " "

syntax on

set fileformat=unix
set encoding=UTF-8

set tabstop=2
set softtabstop=2
set shiftwidth=2
set autoindent
set smartindent
set smarttab
set expandtab
set nowrap
set list
set listchars=eol:.,tab:>-,trail:~,extends:>,precedes:<


set cursorline
set number
set relativenumber
set scrolloff=8
set signcolumn=yes
set showcmd
set noshowmode
set conceallevel=1
set shortmess+=c
set formatoptions-=cro

set belloff=all
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile
set clipboard=unnamed

set ignorecase
set smartcase
set incsearch
set hlsearch


"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

" Enable NerdTree for file exploration
set NERDTree
map<c-n> :NERDTree<CR>

noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <Nop>
nmap <CR> :noh <CR>

" Action commands


" Highlight copied text
Plug 'machakann/vim-highlightedyank'

" Commentary plugin
Plug 'tpope/vim-commentary'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins
nmap <leader>ws <Action>(SplitVertically)
nmap <leader>b <Action>(RecentFiles)
nmap <leader>ft <Action>(ActivateTerminalToolWindow)
nmap gI <Action>(GotoImplementation)
nmap <C-1> <Action>(SelectInProjectView)
nmap <C-e> <Action>(ActivateProjectToolWindow)
nmap <C-s> <Action>(SaveAll)
nmap <leader>ws <Action>(MoveTabRight)
nmap <leader>wco <Action>(CloseAllEditorsButActive)
"" Map \r to the RefoSelectInProjectViewrmat Code action
"map \r <Action>(ReformatCode)

 "" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)
